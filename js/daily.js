const tgD = window.Telegram.WebApp;

tgD.ready();
tgD.expand();

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∑–º—ñ–Ω–Ω–∏—Ö
let streak = 4; // –î–ª—è –¥–µ–º–æ: –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —É–∂–µ –º–∞—î 4 —É—Å–ø—ñ—à–Ω–∏—Ö –ø—Ä–æ–≥–Ω–æ–∑–∏
let dailyBetUsed = false;
let extraBetPurchased = false;
let friendInvited = false;
let selectedMatchId = null;
let selectedOption = null;

let matches = [
    { id: 1, teams: ["Team A", "Team B"], type: "esport", result: null, predicted: false },
    { id: 2, teams: ["Team C", "Team D"], type: "sport", result: null, predicted: false },
    { id: 3, teams: ["Team E", "Team F"], type: "esport", result: null, predicted: false },
    { id: 4, teams: ["Team G", "Team H"], type: "sport", result: null, predicted: false },
    { id: 5, teams: ["Team I", "Team J"], type: "esport", result: null, predicted: false }
];

// –ó–±–µ—Ä—ñ–≥–∞–Ω–Ω—è —Å—Ç–∞–Ω—É —á–µ—Ä–µ–∑ localStorage
function saveState() {
    localStorage.setItem('streak', streak);
    localStorage.setItem('dailyBetUsed', dailyBetUsed);
    localStorage.setItem('extraBetPurchased', extraBetPurchased);
    localStorage.setItem('friendInvited', friendInvited);
    localStorage.setItem('matches', JSON.stringify(matches));
    localStorage.setItem('lastLoginDate', new Date().toISOString().split('T')[0]);
}

function loadState() {
    const lastLogin = localStorage.getItem('lastLoginDate');
    const today = new Date().toISOString().split('T')[0];
    if (lastLogin !== today) {
        // –°–∫–∏–¥–∞—î–º–æ —â–æ–¥–µ–Ω–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –ø—Ä–∏ –Ω–æ–≤–æ–º—É –¥–Ω—ñ
        dailyBetUsed = false;
        extraBetPurchased = false;
        friendInvited = false;
        matches.forEach(match => {
            match.result = null;
            match.predicted = false;
        });
    } else {
        streak = parseInt(localStorage.getItem('streak')) || 4; // –î–ª—è –¥–µ–º–æ
        dailyBetUsed = localStorage.getItem('dailyBetUsed') === 'true';
        extraBetPurchased = localStorage.getItem('extraBetPurchased') === 'true';
        friendInvited = localStorage.getItem('friendInvited') === 'true';
        matches = JSON.parse(localStorage.getItem('matches')) || matches;
    }
}

document.addEventListener('DOMContentLoaded', () => {
    const progressBarFill = document.getElementById('progressBarFill');
    const progressText = document.getElementById('progressText');
    const matchList = document.getElementById('matchList');
    const extraBetButton = document.getElementById('extraBetButton');
    const shareButton = document.getElementById('shareButton');
    const rewardMessage = document.getElementById('rewardMessage');

    // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–∞–Ω—É
    loadState();

    // –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø—Ä–æ–≥—Ä–µ—Å—É (–ø—Ä–æ–≥—Ä–µ—Å-–±–∞—Ä)
    function displayProgress() {
        const progressPercentage = (streak / 10) * 100;
        progressBarFill.style.width = `${progressPercentage}%`;
        progressText.textContent = `–ü—Ä–æ–≥—Ä–µ—Å: ${streak}/10 —É—Å–ø—ñ—à–Ω–∏—Ö –ø—Ä–æ–≥–Ω–æ–∑—ñ–≤`;
    }

    // –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É –º–∞—Ç—á—ñ–≤
    function displayMatches() {
        matchList.innerHTML = '';
        matches.forEach(match => {
            const matchItem = document.createElement('div');
            matchItem.className = 'match-item';
            let optionsHtml = `
                <button ${match.predicted ? 'disabled' : ''} onclick="selectOption(${match.id}, '${match.teams[0]}', this)">${match.teams[0]}</button>
                ${match.type === 'sport' ? `<button ${match.predicted ? 'disabled' : ''} onclick="selectOption(${match.id}, '–ù—ñ—á–∏—è', this)">–ù—ñ—á–∏—è</button>` : ''}
                <button ${match.predicted ? 'disabled' : ''} onclick="selectOption(${match.id}, '${match.teams[1]}', this)">${match.teams[1]}</button>
            `;
            let confirmButtonHtml = match.predicted ? '' : `<button class="confirm-button" onclick="confirmPrediction(${match.id})" id="confirmButton-${match.id}" disabled>–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –ø—Ä–æ–≥–Ω–æ–∑</button>`;
            matchItem.innerHTML = `
                <h3>${match.teams[0]} vs ${match.teams[1]}</h3>
                <div class="options" id="options-${match.id}">
                    ${optionsHtml}
                </div>
                ${confirmButtonHtml}
            `;
            matchList.appendChild(matchItem);
        });
    }

    // –í–∏–±—ñ—Ä –æ–ø—Ü—ñ—ó –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑—É
    window.selectOption = (matchId, option, button) => {
        if (dailyBetUsed && !extraBetPurchased && !friendInvited) {
            tgD.showAlert('–í–∏ –≤–∂–µ –∑—Ä–æ–±–∏–ª–∏ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏–π –ø—Ä–æ–≥–Ω–æ–∑ —Å—å–æ–≥–æ–¥–Ω—ñ! –î–æ–¥–∞—Ç–∫–æ–≤–∏–π –ø—Ä–æ–≥–Ω–æ–∑ –∫–æ—à—Ç—É—î –≤—ñ–¥ 50 –≥—Ä–Ω –∞–±–æ –∑–∞–ø—Ä–æ—Å—ñ—Ç—å –¥—Ä—É–≥–∞.');
            return;
        }

        const match = matches.find(m => m.id === matchId);
        if (match.predicted) {
            tgD.showAlert('–í–∏ –≤–∂–µ –∑—Ä–æ–±–∏–ª–∏ –ø—Ä–æ–≥–Ω–æ–∑ –¥–ª—è —Ü—å–æ–≥–æ –º–∞—Ç—á—É!');
            return;
        }

        // –ó–Ω—ñ–º–∞—î–º–æ –≤–∏–¥—ñ–ª–µ–Ω–Ω—è –∑ —É—Å—ñ—Ö –∫–Ω–æ–ø–æ–∫
        const buttons = document.querySelectorAll(`#options-${matchId} button`);
        buttons.forEach(btn => btn.classList.remove('selected'));

        // –í–∏–¥—ñ–ª—è—î–º–æ –≤–∏–±—Ä–∞–Ω—É –∫–Ω–æ–ø–∫—É
        button.classList.add('selected');

        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤–∏–±—ñ—Ä
        selectedMatchId = matchId;
        selectedOption = option;

        // –ê–∫—Ç–∏–≤—É—î–º–æ –∫–Ω–æ–ø–∫—É "–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –ø—Ä–æ–≥–Ω–æ–∑"
        const confirmButton = document.getElementById(`confirmButton-${matchId}`);
        if (confirmButton) {
            confirmButton.disabled = false;
        }
    };

    // –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –ø—Ä–æ–≥–Ω–æ–∑—É
    window.confirmPrediction = (matchId) => {
        if (!selectedMatchId || !selectedOption) {
            tgD.showAlert('–°–ø–æ—á–∞—Ç–∫—É –≤–∏–±–µ—Ä—ñ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –º–∞—Ç—á—É!');
            return;
        }

        const match = matches.find(m => m.id === matchId);
        if (match.predicted) {
            tgD.showAlert('–í–∏ –≤–∂–µ –∑—Ä–æ–±–∏–ª–∏ –ø—Ä–æ–≥–Ω–æ–∑ –¥–ª—è —Ü—å–æ–≥–æ –º–∞—Ç—á—É!');
            return;
        }

        match.result = selectedOption;
        match.predicted = true;

        // –Ü–º—ñ—Ç–∞—Ü—ñ—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É –º–∞—Ç—á—É (–¥–ª—è –¥–µ–º–æ)
        const correctResult = match.type === 'sport' ? (Math.random() > 0.66 ? match.teams[0] : Math.random() > 0.33 ? '–ù—ñ—á–∏—è' : match.teams[1]) : (Math.random() > 0.5 ? match.teams[0] : match.teams[1]);
        
        if (selectedOption === correctResult) {
            streak++;
            tgD.showAlert(`–í—ñ—Ç–∞—î–º–æ! –í–∏ –≤–≥–∞–¥–∞–ª–∏ –ø–µ—Ä–µ–º–æ–∂—Ü—è! –í–∞—à —Å—Ç—Ä—ñ–∫: ${streak}`);
            if (streak === 3) {
                rewardMessage.textContent = '–í—ñ—Ç–∞—î–º–æ! –í–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –ø—Ä–∏–∑ –∑–∞ 3 —É—Å–ø—ñ—à–Ω–∏—Ö –ø—Ä–æ–≥–Ω–æ–∑–∏!';
            } else if (streak === 7) {
                rewardMessage.textContent = '–ß—É–¥–æ–≤–æ! –í–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –ø—Ä–∏–∑ –∑–∞ 7 —É—Å–ø—ñ—à–Ω–∏—Ö –ø—Ä–æ–≥–Ω–æ–∑—ñ–≤!';
            } else if (streak === 10) {
                rewardMessage.textContent = '–í—ñ—Ç–∞—î–º–æ! –í–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ FreeBet –Ω–∞ 250 –≥—Ä–Ω –∑–∞ 10 —É—Å–ø—ñ—à–Ω–∏—Ö –ø—Ä–æ–≥–Ω–æ–∑—ñ–≤!';
                streak = 0; // –°–∫–∏–¥–∞–Ω–Ω—è —Å—Ç—Ä—ñ–∫–∞
            }
        } else {
            streak = 0;
            tgD.showAlert('–ù–∞ –∂–∞–ª—å, –≤–∏ –Ω–µ –≤–≥–∞–¥–∞–ª–∏ –ø–µ—Ä–µ–º–æ–∂—Ü—è. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ –∑–∞–≤—Ç—Ä–∞!');
        }

        dailyBetUsed = true;
        extraBetPurchased = false; // –°–∫–∏–¥–∞—î–º–æ –ø—ñ—Å–ª—è –ø—Ä–æ–≥–Ω–æ–∑—É
        friendInvited = false; // –°–∫–∏–¥–∞—î–º–æ –ø—ñ—Å–ª—è –ø—Ä–æ–≥–Ω–æ–∑—É
        selectedMatchId = null;
        selectedOption = null;

        saveState();
        displayProgress();
        displayMatches();
    };

    // –î–æ–¥–∞—Ç–∫–æ–≤–∏–π –ø—Ä–æ–≥–Ω–æ–∑ –∑–∞ –≥—Ä–æ—à—ñ (–∑ –ø—Ä–µ—Å–µ—Ç–∞–º–∏)
    extraBetButton.addEventListener('click', () => {
        if (dailyBetUsed && !extraBetPurchased) {
            tgD.showPopup({
                title: "–î–æ–¥–∞—Ç–∫–æ–≤–∏–π –ø—Ä–æ–≥–Ω–æ–∑",
                message: "–í–∏–±–µ—Ä—ñ—Ç—å —Å—É–º—É –¥–ª—è –¥–æ–¥–∞—Ç–∫–æ–≤–æ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑—É (FreeBet –Ω–µ –º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏):",
                buttons: [
                    { id: "50", type: "default", text: "50 –≥—Ä–Ω" },
                    { id: "100", type: "default", text: "100 –≥—Ä–Ω" },
                    { id: "200", type: "default", text: "200 –≥—Ä–Ω" }
                ]
            }, (buttonId) => {
                if (buttonId) {
                    const amount = parseInt(buttonId);
                    tgD.showAlert(`–Ü–º—ñ—Ç–∞—Ü—ñ—è –æ–ø–ª–∞—Ç–∏ ${amount} –≥—Ä–Ω... (–¥–ª—è MVP). –î–æ–¥–∞—Ç–∫–æ–≤–∏–π –ø—Ä–æ–≥–Ω–æ–∑ –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ!`);
                    extraBetPurchased = true;
                    saveState();
                }
            });
        } else if (extraBetPurchased) {
            tgD.showAlert("–í–∏ –≤–∂–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–ª–∏ –¥–æ–¥–∞—Ç–∫–æ–≤–∏–π –ø—Ä–æ–≥–Ω–æ–∑ –∑–∞ –≥—Ä–æ—à—ñ!");
        } else {
            tgD.showAlert("–í–∏ —â–µ –Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–ª–∏ —Å–≤—ñ–π –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏–π –ø—Ä–æ–≥–Ω–æ–∑!");
        }
    });

    // –ó–∞–ø—Ä–æ—à–µ–Ω–Ω—è –¥—Ä—É–≥–∞
    shareButton.addEventListener('click', () => {
        if (dailyBetUsed && !friendInvited) {
            const shareText = "–ü—Ä–∏–≤—ñ—Ç! –ü—Ä–∏—î–¥–Ω—É–π—Å—è –¥–æ BetKing ‚Äî —Ä–æ–±–∏ –ø—Ä–æ–≥–Ω–æ–∑–∏ –Ω–∞ –º–∞—Ç—á—ñ —Ç–∞ –æ—Ç—Ä–∏–º—É–π FreeBets! üöÄ –¶–µ –ª–∏—à–µ MVP-–≤–µ—Ä—Å—ñ—è, —Ç–æ–º—É –º–∏ —â–µ –Ω–µ –∑–∞–ø–∏—Å—É—î–º–æ –¥–∞–Ω—ñ ‚Äî –æ—Å–Ω–æ–≤–Ω–∏–π —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª —É —Ä–æ–∑—Ä–æ–±—Ü—ñ!";
            tgD.showPopup({
                title: "–ó–∞–ø—Ä–æ—Å–∏—Ç–∏ –¥—Ä—É–≥–∞",
                message: "–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –∑–∞–ø—Ä–æ—à–µ–Ω–Ω—è —á–µ—Ä–µ–∑ Telegram?",
                buttons: [{ id: "share", type: "default", text: "–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏" }]
            }, (buttonId) => {
                if (buttonId === "share") {
                    tgD.sendData(JSON.stringify({ action: "share", text: shareText }));
                    tgD.showAlert("–ó–∞–ø—Ä–æ—à–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ! –í–∏ —Ç–∞ –≤–∞—à –¥—Ä—É–≥ –æ—Ç—Ä–∏–º–∞–ª–∏ –¥–æ–¥–∞—Ç–∫–æ–≤–∏–π –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏–π –ø—Ä–æ–≥–Ω–æ–∑!");
                    friendInvited = true;
                    saveState();
                }
            });
        } else if (friendInvited) {
            tgD.showAlert("–í–∏ –≤–∂–µ –∑–∞–ø—Ä–æ—Å–∏–ª–∏ –¥—Ä—É–≥–∞ —Å—å–æ–≥–æ–¥–Ω—ñ!");
        } else {
            tgD.showAlert("–í–∏ —â–µ –Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–ª–∏ —Å–≤—ñ–π –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏–π –ø—Ä–æ–≥–Ω–æ–∑!");
        }
    });

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
    displayProgress();
    displayMatches();
});